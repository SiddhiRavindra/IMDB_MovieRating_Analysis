{
	"name": "dataflowDimTitleAkas",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTableStageTitleAkas",
						"type": "DatasetReference"
					},
					"name": "source"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTableCountryCode",
						"type": "DatasetReference"
					},
					"name": "sourceDimCountry"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable_NewDIMlanguage",
						"type": "DatasetReference"
					},
					"name": "sourceDimLanguage"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTableDIMmovie",
						"type": "DatasetReference"
					},
					"name": "sourceDimMovie"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTableDIMtitleakas",
						"type": "DatasetReference"
					},
					"name": "sink"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn"
				},
				{
					"name": "select"
				},
				{
					"name": "joinCountry"
				},
				{
					"name": "joinLanguage"
				},
				{
					"name": "joinMovie"
				},
				{
					"name": "surrogateKey"
				}
			],
			"scriptLines": [
				"parameters{",
				"     jobid as string (uuid())",
				"}",
				"source(output(",
				"          TITLE_AKAS_SK as decimal(38,0),",
				"          TITLEID as string,",
				"          ORDERING as decimal(38,0),",
				"          TITLE as string,",
				"          REGION as string,",
				"          LANGUAGE as string,",
				"          TYPES as string,",
				"          ATTRIBUTES as string,",
				"          ISORIGINALTITLE as decimal(38,0),",
				"          FILENAME as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source",
				"source(output(",
				"          COUNTRY_CODE_SK as decimal(38,0),",
				"          COUNTRY_NAME as string,",
				"          COUNTRY_CODE as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceDimCountry",
				"source(output(",
				"          ISO_LANGUAGE_SK as decimal(10,0),",
				"          LANGUAGE_CODE as string,",
				"          LANGUAGE_NAME as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DATE as date,",
				"          ENDONYM as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceDimLanguage",
				"source(output(",
				"          MOVIE_SK as decimal(10,0),",
				"          TCONST as string,",
				"          START_DATE_ID as date,",
				"          END_DATE_ID as date,",
				"          TITLETYPE as string,",
				"          PRIMARYTITLE as string,",
				"          ORIGINALTITLE as string,",
				"          ISADULT as string,",
				"          STARTYEAR as decimal(38,0),",
				"          ENDYEAR as decimal(38,0),",
				"          RUNTIMEMINUTES as decimal(38,0),",
				"          GENRES as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceDimMovie",
				"joinMovie derive(DI_JOB_ID = $jobid,",
				"          DI_LOAD_DATE = currentTimestamp(),",
				"          RowNum = RowNum) ~> derivedColumn",
				"derivedColumn select(mapColumn(",
				"          TITLEID,",
				"          ORDERING,",
				"          TITLE,",
				"          REGION,",
				"          LANGUAGE,",
				"          TYPES,",
				"          ATTRIBUTES,",
				"          ISORIGINALTITLE,",
				"          DI_JOB_ID,",
				"          DI_LOAD_DATE,",
				"          TITLE_AKAS_SK,",
				"          COUNTRY_CODE_SK,",
				"          ISO_LANGUAGE_SK,",
				"          MOVIE_SK",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> select",
				"surrogateKey, sourceDimCountry join(REGION == COUNTRY_CODE,",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinCountry",
				"joinCountry, sourceDimLanguage join(LANGUAGE == LANGUAGE_NAME,",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinLanguage",
				"joinLanguage, sourceDimMovie join(TITLEID == TCONST,",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinMovie",
				"source keyGenerate(output(RowNum as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey",
				"select sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          TITLE_AKAS_SK as decimal(0,0),",
				"          COUNTRY_CODE_SK as decimal(10,0),",
				"          ISO_LANGUAGE_SK as decimal(10,0),",
				"          MOVIE_SK as decimal(10,0),",
				"          ORDERING as decimal(38,0),",
				"          TITLE as string,",
				"          TYPES as string,",
				"          ATTRIBUTES as string,",
				"          ISORIGINALTITLE as string,",
				"          REGION as string,",
				"          TITLEID as string,",
				"          LANGUAGE as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DATE as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     stageInsert: true,",
				"     mapColumn(",
				"          TITLE_AKAS_SK,",
				"          COUNTRY_CODE_SK,",
				"          ISO_LANGUAGE_SK,",
				"          MOVIE_SK,",
				"          ORDERING,",
				"          TITLE,",
				"          TYPES,",
				"          ATTRIBUTES,",
				"          ISORIGINALTITLE,",
				"          REGION,",
				"          TITLEID,",
				"          LANGUAGE,",
				"          DI_JOB_ID,",
				"          DI_LOAD_DATE",
				"     )) ~> sink"
			]
		}
	}
}